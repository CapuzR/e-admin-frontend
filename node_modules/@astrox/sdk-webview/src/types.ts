import { BaseConnectResponse, TransferNFTWithIdentifier, TransferToken } from '@astrox/sdk-core';

export interface WebViewConnectResponse extends BaseConnectResponse {
  cacheKey: string;
}

export type DelegationMode = 'global' | 'domain';

export interface WebViewConnectRequest {
  delegationTargets?: Array<string>;
  noUnify?: boolean;
  host: string;
  delegationModes?: Array<DelegationMode>;
}

export interface BalanceResponseObject {
  amount: number;
  canisterId: string;
  decimals: number;
  image?: string;
  name: string;
  symbol: string;
}

export interface WebViewAuthResponse {
  authorized: boolean;
  payload?: WebViewConnectResponse;
}

export interface SupportedToken {
  decimals: number;
  fee: bigint;
  name: string;
  symbol: string;
  standard: string;
  canisterId: string;
}

export interface BaseBridgeErrorResponse {
  kind: string;
  text: string;
}

// Transaction Types
export enum TransactionMessageKind {
  success = 'transaction-client-success',
  fail = 'transaction-client-failure',
}

export enum TransactionType {
  token = 'token',
  nft = 'nft',
}

export interface TransactionResponseFailure {
  kind: TransactionMessageKind.fail | string;
  text: string;
}

export interface TokenTransferResponse {
  blockHeight?: bigint;
  amount?: string;
  transactionId?: string;
  originPayload: TransferToken;
}

export interface NFTTransferResponse {
  success: true;
  originPayload: TransferNFTWithIdentifier;
}

export interface TransactionResponseSuccess {
  kind: TransactionMessageKind.success | string;
  type: TransactionType | string;
  payload?: TokenTransferResponse | NFTTransferResponse;
}

export type TransactionResponse = TransactionResponseSuccess | TransactionResponseFailure;
