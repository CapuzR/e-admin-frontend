import type * as Stitches from '../index.js'
import { createStitches } from '../index.js'
import * as React from 'react'
import type * as Polymorphic from '@radix-ui/react-polymorphic';

const { styled } = createStitches()

const DEFAULT_TAG = 'span';

export const StyledText = styled(DEFAULT_TAG, {});

type TextCSSProp = { css?: Stitches.CSS };
type TextVariants = Stitches.VariantProps<typeof StyledText>;
type TextOwnProps = TextCSSProp & TextVariants;

type TextComponent = Polymorphic.ForwardRefComponent<typeof DEFAULT_TAG, TextOwnProps>;

export const Text = React.forwardRef((props, forwardedRef) => {
	return <StyledText {...props} ref={forwardedRef} />;
}) as TextComponent;

export function Example() {
	return (
		<Text css={{ lineHeight: undefined }} />
	)
}
