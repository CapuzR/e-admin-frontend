'use strict';

exports.CreateActorError = void 0;

(function (CreateActorError) {
  CreateActorError["FetchRootKeyFailed"] = "FETCH_ROOT_KEY_FAILED";
  CreateActorError["CreateActorFailed"] = "CREATE_ACTOR_FAILED";
  CreateActorError["NotInitialized"] = "NOT_INITIALIZED";
  CreateActorError["LocalActorsNotSupported"] = "LOCAL_ACTORS_NOT_SUPPORTED";
})(exports.CreateActorError || (exports.CreateActorError = {}));

exports.ConnectError = void 0;

(function (ConnectError) {
  ConnectError["NotInitialized"] = "NOT_INITIALIZED";
  ConnectError["NotInstalled"] = "NOT_INSTALLED";
  ConnectError["ConnectFailed"] = "CONNECT_FAILED";
  ConnectError["IsLocked"] = "IS_LOCKED";
})(exports.ConnectError || (exports.ConnectError = {}));

exports.DisconnectError = void 0;

(function (DisconnectError) {
  DisconnectError["DisconnectFailed"] = "DISCONNECT_FAILED";
  DisconnectError["NotInitialized"] = "NOT_INITIALIZED";
})(exports.DisconnectError || (exports.DisconnectError = {}));

exports.InitError = void 0;

(function (InitError) {
  InitError["NotInstalled"] = "NOT_INSTALLED";
  InitError["InitFailed"] = "INIT_FAILED";
  InitError["FetchRootKeyFailed"] = "FETCH_ROOT_KEY_FAILED";
})(exports.InitError || (exports.InitError = {}));

exports.BalanceError = void 0;

(function (BalanceError) {
  BalanceError["NotInitialized"] = "NOT_INITIALIZED";
  BalanceError["QueryBalanceFailed"] = "QUERY_BALANCE_FAILED";
})(exports.BalanceError || (exports.BalanceError = {}));

exports.TokensError = void 0;

(function (TokensError) {
  TokensError["NotInitialized"] = "NOT_INITIALIZED";
  TokensError["QueryBalanceFailed"] = "QUERY_BALANCE_FAILED";
})(exports.TokensError || (exports.TokensError = {}));

exports.NFTsError = void 0;

(function (NFTsError) {
  NFTsError["NotInitialized"] = "NOT_INITIALIZED";
  NFTsError["QueryBalanceFailed"] = "QUERY_BALANCE_FAILED";
})(exports.NFTsError || (exports.NFTsError = {}));

exports.TransferError = void 0;

(function (TransferError) {
  TransferError["InsufficientBalance"] = "INSUFFICIENT_BALANCE";
  TransferError["TransferFailed"] = "TRANSFER_FAILED";
  TransferError["FaultyAddress"] = "FAULTY_ADDRESS";
  TransferError["NotInitialized"] = "NOT_INITIALIZED";
  TransferError["TokenNotSupported"] = "TOKEN_NOT_SUPPORTED";
  TransferError["NotConnected"] = "NOT_CONNECTED";
})(exports.TransferError || (exports.TransferError = {}));

exports.SignError = void 0;

(function (SignError) {
  SignError["NotConnected"] = "NOT_CONNECTED";
  SignError["NotInitialized"] = "NOT_INITIALIZED";
})(exports.SignError || (exports.SignError = {})); // type ProviderOptions = {
//   connector: IConnector,
// }
