import { SignIdentity, PublicKey, ReadRequest, CallRequest } from "@dfinity/agent";
import { BinaryBlob } from "@dfinity/candid";
import { Principal } from "@dfinity/principal";
import { SerializedPublicKey } from "./Provider/interfaces";
declare type RequestType = ReadRequest | CallRequest;
export declare class PlugIdentity extends SignIdentity {
    transformRequest: any;
    private publicKey;
    private whitelist;
    constructor(publicKey: SerializedPublicKey, whitelist: string[]);
    getPublicKey(): PublicKey;
    sign(_blob: BinaryBlob, _signInfo?: RequestType): Promise<BinaryBlob>;
    getPrincipal(): Principal;
}
export {};
