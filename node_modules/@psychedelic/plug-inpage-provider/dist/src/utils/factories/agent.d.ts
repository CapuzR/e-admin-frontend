import { QueryFields, Identity, QueryResponse, SubmitResponse, ReadStateOptions, ReadStateResponse } from "@dfinity/agent";
import { BinaryBlob } from "@dfinity/candid";
import { Principal } from "@dfinity/principal";
import RPCManager from "../../modules/RPCManager";
export declare const callMethodFactory: (clientRPC: RPCManager, batchTxId: string | undefined, idl: {
    [key: string]: any;
} | null) => (canisterId: Principal | string, options: {
    methodName: string;
    arg: BinaryBlob;
    effectiveCanisterId?: Principal | string;
}, identity?: Identity | Promise<Identity>) => Promise<SubmitResponse>;
export declare const queryMethodFactory: (clientRPC: RPCManager, batchTxId?: string) => (canisterId: Principal | string, fields: QueryFields, identity?: Identity | Promise<Identity>) => Promise<QueryResponse>;
export declare const readStateMethodFactory: (clientRPC: RPCManager, batchTxId?: string) => (canisterId: Principal | string, fields: ReadStateOptions, identity?: Identity | Promise<Identity>) => Promise<ReadStateResponse>;
