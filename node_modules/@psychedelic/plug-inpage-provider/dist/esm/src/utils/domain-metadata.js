const getDomainMetadata = () => {
    const url = beautifyUrl(window.location.origin);
    const name = getName();
    const icons = getIcons();
    const pageWidth = getPageWidth();
    return {
        url,
        name,
        icons,
        pageWidth,
    };
};
export default getDomainMetadata;
const beautifyUrl = (url) => (url.replace(/^(?:https?:\/\/)?(?:www\.)?/i, '').split('/')[0]);
const getPageWidth = () => {
    const win = window, doc = document, docElem = doc.documentElement, body = doc.getElementsByTagName('body')[0];
    return win.innerWidth || docElem.clientWidth || body.clientWidth;
};
const getName = () => {
    var _a;
    let name = null;
    const metaTags = document.getElementsByTagName('meta');
    if (!metaTags)
        return beautifyUrl(window.location.origin);
    for (let i = 0; i < metaTags.length; i += 1) {
        const meta = metaTags[i];
        const property = ((_a = meta.getAttribute('property')) === null || _a === void 0 ? void 0 : _a.toLowerCase().indexOf('site_name')) > -1;
        if (property) {
            name = meta.getAttribute('content');
        }
    }
    return name !== null && name !== void 0 ? name : beautifyUrl(window.location.origin);
};
const getIcons = () => {
    var _a;
    const links = document.getElementsByTagName('link');
    const icons = [];
    for (let i = 0; i < links.length; i += 1) {
        const link = links[i];
        const rel = ((_a = link.getAttribute('rel')) === null || _a === void 0 ? void 0 : _a.toLowerCase().indexOf('icon')) > -1;
        if (rel) {
            const href = link.getAttribute('href');
            if (href) {
                if (href.toLowerCase().indexOf('https:') === -1
                    && href.toLowerCase().indexOf('http:') === -1
                    && href.indexOf('//') !== 0) {
                    let absoluteHref = `${window.location.protocol}//${window.location.host}`;
                    if (href.indexOf('/') === 0) {
                        absoluteHref += href;
                    }
                    else {
                        const path = window.location.pathname.split('/');
                        path.pop();
                        const finalPath = path.join('/');
                        absoluteHref += `${finalPath}/${href}`;
                    }
                    icons.push(absoluteHref);
                }
                else if (href.indexOf('//') === 0) {
                    const absoluteUrl = window.location.protocol + href;
                    icons.push(absoluteUrl);
                }
                else {
                    icons.push(href);
                }
            }
        }
    }
    return icons;
};
