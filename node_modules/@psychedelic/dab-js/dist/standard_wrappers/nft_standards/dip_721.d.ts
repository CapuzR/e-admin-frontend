import { ActorSubclass, HttpAgent } from '@dfinity/agent';
import { Principal } from '@dfinity/principal';
import { NFTCollection, NFTDetails } from '../../interfaces/nft';
import Interface from '../../interfaces/dip_721';
import NFT from './default';
export default class ERC721 extends NFT {
    standard: string;
    actor: ActorSubclass<Interface>;
    constructor(canisterId: string, agent: HttpAgent);
    backwardsCompatibleGuard(legacyMethod: string, newMethod: string): (params?: Array<any>) => Promise<any>;
    getUserTokens(principal: Principal): Promise<NFTDetails[]>;
    transfer(to: Principal, tokenIndex: number): Promise<void>;
    details(tokenIndex: number): Promise<NFTDetails>;
    getMetadata(): Promise<NFTCollection>;
    private serializeTokenData;
    private formatMetadata;
}
